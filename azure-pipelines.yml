# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: windows-2019

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "downloading sysmon..."
      $sysmonDir = "C:\Sysmon"
      
      If (!(test-path $sysmonDir)) {
        New-Item -ItemType Directory -Force -Path $sysmonDir} Else {
        Write-Host "Sysmon directory exists. Exiting"
        exit
      } 
      
      $sysmonPath = "C:\Sysmon\Sysmon.exe"
      $sysmonConfigPath = "D:\a\1\s\sysmonconfig.xml"
      
      [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
      
      (New-Object System.Net.WebClient).DownloadFile('https://live.sysinternals.com/Sysmon.exe', $sysmonPath)
    failOnStderr: true

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $sysmonDir= "C:\Sysmon"
      
      Write-Host "Installing Sysmon"
      Start-Process -FilePath "$sysmonDir\Sysmon.exe" -ArgumentList "-accepteula -i"
      
      Write-Host "verify that sysmon service is running..."
      Start-Sleep 5
      If ((Get-Service -name Sysmon).Status -ne "Running") {
      throw "The sysmon service did NOT start"
      }
    failOnStderr: true

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $sysmonConfigPath = "D:\a\1\s\sysmonconfig-export.xml"
      
      Write-Host "Loading sysmon config"
      $sysmon = C:\Sysmon\Sysmon.exe -c $sysmonConfigPath
      $sysmon 2> $null
      if($sysmon -like '*Configuration updated.*') {Write-Host "all good!"} else {throw "Error loading sysmon config to sysmon"}
    failOnStderr: false